services:
  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: elastic-rule-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - elastic-rule-network
    depends_on:
      - backend

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: elastic-rule-backend
    ports:
      - "3001:3001"
      - "9229:9229" # Debug port
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - BACKEND_PORT=3001
      - ELASTIC_CLOUD_URL=${ELASTIC_CLOUD_URL:-}
      - ELASTIC_API_KEY=${ELASTIC_API_KEY:-}
    networks:
      - elastic-rule-network

  # Sync Service (for GitHub to Elasticsearch sync)
  sync-service:
    build:
      context: ./sync-service
      dockerfile: Dockerfile
    container_name: elastic-rule-sync
    ports:
      - "8081:8081"
    volumes:
      - ./sync-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - ELASTIC_CLOUD_URL=${ELASTIC_CLOUD_URL:-}
      - ELASTIC_API_KEY=${ELASTIC_API_KEY:-}
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - GITHUB_OWNER=elastic
      - GITHUB_REPO=detection-rules
      - GITHUB_BRANCH=main
    networks:
      - elastic-rule-network

networks:
  elastic-rule-network:
    driver: bridge
    name: elastic-rule-network